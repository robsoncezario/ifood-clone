{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\robson\\\\Desktop\\\\ifood-react-native\\\\app\\\\src\\\\components\\\\Slider\\\\index.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar useStyles = function useStyles(props) {\n  return StyleSheet.create({\n    container: {\n      flex: 1,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexDirection: 'column'\n    },\n    spacer: {\n      marginTop: 14\n    },\n    image: {\n      width: 267,\n      height: 140,\n      marginRight: 10\n    },\n    dotsContainer: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'row'\n    },\n    dots: {\n      height: 8,\n      width: 8,\n      backgroundColor: '#000000',\n      margin: 4,\n      borderRadius: 8\n    }\n  });\n};\n\nvar Slider = function Slider() {\n  var _Dimensions$get = Dimensions.get('window'),\n      width = _Dimensions$get.width;\n\n  var styles = useStyles({\n    width: width\n  });\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentIndex = _useState2[0],\n      setCurrentIndex = _useState2[1];\n\n  var itemList = [{\n    imageSrc: require(\"../../../assets/images/highlights/70off.png\"),\n    component: null\n  }, {\n    imageSrc: require(\"../../../assets/images/highlights/acaiesorvete.png\"),\n    component: null\n  }, {\n    imageSrc: require(\"../../../assets/images/highlights/entregagratis.png\"),\n    component: null\n  }, {\n    imageSrc: require(\"../../../assets/images/highlights/maispedidos.png\"),\n    component: null\n  }];\n\n  var handleScrollEnd = function handleScrollEnd(_ref) {\n    var nativeEvent = _ref.nativeEvent;\n    var position = nativeEvent.contentOffset;\n    var index = Math.round(position.x / styles.image.width);\n\n    if (index !== currentIndex) {\n      setCurrentIndex(index);\n      console.log(index);\n    }\n  };\n\n  return React.createElement(View, {\n    style: styless.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: true,\n    pagingEnabled: true,\n    showsHorizontalScrollIndicator: false,\n    scrollEventThrottle: 160,\n    style: styles.spacer,\n    onMomentumScrollEnd: handleScrollEnd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, itemList.map(function (item, index) {\n    return React.createElement(Image, {\n      key: index,\n      style: styles.image,\n      source: item.imageSrc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    });\n  })));\n};\n\nexport default Slider;","map":{"version":3,"sources":["C:/Users/robson/Desktop/ifood-react-native/app/src/components/Slider/index.tsx"],"names":["React","useState","useStyles","props","StyleSheet","create","container","flex","display","justifyContent","alignItems","flexDirection","spacer","marginTop","image","width","height","marginRight","dotsContainer","dots","backgroundColor","margin","borderRadius","Slider","Dimensions","get","styles","currentIndex","setCurrentIndex","itemList","imageSrc","require","component","handleScrollEnd","nativeEvent","position","contentOffset","index","Math","round","x","console","log","styless","map","item"],"mappings":"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","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { \r\n  View,\r\n  StyleSheet, \r\n  ScrollView,\r\n  Image,\r\n  Dimensions\r\n} from 'react-native';\r\n\r\nconst useStyles = (props: any) => StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    justifyContent: 'center', \r\n    alignItems: 'center',\r\n    flexDirection: 'column'\r\n  },\r\n\r\n  spacer: {\r\n    marginTop: 14\r\n  },\r\n\r\n  image: {\r\n    width: 267,\r\n    height: 140,\r\n    marginRight: 10\r\n  },\r\n\r\n  dotsContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'row'\r\n  },\r\n\r\n  dots: {\r\n    height: 8, \r\n    width: 8, \r\n    backgroundColor: '#000000', \r\n    margin: 4, \r\n    borderRadius: 8\r\n  }\r\n})\r\n\r\nconst Slider = () => {\r\n  const {width} = Dimensions.get('window');\r\n  const styles = useStyles({width: width});\r\n\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  const itemList = [\r\n    {\r\n      imageSrc: require('../../../assets/images/highlights/70off.png'),\r\n      component: null\r\n    },\r\n\r\n    {\r\n      imageSrc: require('../../../assets/images/highlights/acaiesorvete.png'),\r\n      component: null\r\n    },\r\n\r\n    {\r\n      imageSrc: require('../../../assets/images/highlights/entregagratis.png'),\r\n      component: null\r\n    },\r\n\r\n    {\r\n      imageSrc: require('../../../assets/images/highlights/maispedidos.png'),\r\n      component: null\r\n    }\r\n  ];\r\n\r\n  const handleScrollEnd = ({ nativeEvent }: any) => {\r\n    const position = nativeEvent.contentOffset; \r\n    const index = Math.round(position.x / styles.image.width);\r\n \r\n    if (index !== currentIndex) {\r\n      setCurrentIndex(index);\r\n      console.log(index);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={styless.container}>\r\n      <ScrollView\r\n        horizontal={true}\r\n        pagingEnabled={true} \r\n        showsHorizontalScrollIndicator={false}\r\n        scrollEventThrottle={160}\r\n        style={styles.spacer}\r\n        onMomentumScrollEnd={handleScrollEnd} >\r\n        {itemList.map((item, index) => { \r\n          return ( \r\n            <Image key={index} \r\n                    style={styles.image}\r\n                    source={item.imageSrc} />\r\n          );\r\n        })}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default Slider;"]},"metadata":{},"sourceType":"module"}