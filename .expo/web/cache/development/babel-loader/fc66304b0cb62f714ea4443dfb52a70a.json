{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\robson\\\\Desktop\\\\ifood-react-native\\\\app\\\\src\\\\components\\\\Restaurant\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as atoms from \"../../geolocator/atom\";\nimport { useRecoilValue } from 'recoil';\nimport { iFoodIcons } from \"../../theme/fonts\";\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    borderRadius: 4,\n    borderColor: 'rgb(232, 232, 232)',\n    borderWidth: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    flexDirection: 'row',\n    marginTop: 10\n  },\n  image: {\n    width: 54,\n    height: 54,\n    resizeMode: 'cover',\n    margin: 12\n  },\n  description: {\n    borderLeftColor: 'rgb(232, 232, 232)',\n    borderLeftWidth: 1,\n    padding: 12,\n    display: 'flex',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    flexDirection: 'column'\n  },\n  name: {\n    fontFamily: 'SulSans-Bold',\n    fontSize: 15,\n    color: 'rgb(62, 62, 62)'\n  },\n  row: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    flexDirection: 'row'\n  },\n  ratingIcon: {\n    color: '#e7a74e',\n    fontSize: 12,\n    fontFamily: 'iFood-Icons'\n  },\n  ratingValue: {\n    color: '#e7a74e',\n    fontFamily: 'SulSans-Bold',\n    fontSize: 12\n  },\n  info: {\n    fontFamily: 'SulSans-Regular',\n    fontSize: 13,\n    color: 'rgb(113, 113, 113)'\n  },\n  margin: {\n    marginTop: 10\n  }\n});\n\nvar RestaurantComponent = function RestaurantComponent(props) {\n  var _address$getDistanceB, _restaurant$category;\n\n  var restaurant = props.restaurant;\n  var address = useRecoilValue(atoms.addressState);\n  var dist = ((_address$getDistanceB = address == null ? void 0 : address.getDistanceBetween(restaurant.address)) != null ? _address$getDistanceB : 0) / 1000;\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: restaurant.imageSrc\n    },\n    resizeMode: 'cover',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.name,\n    numberOfLines: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, restaurant.name), React.createElement(View, {\n    style: styles.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.ratingIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, iFoodIcons.star), React.createElement(Text, {\n    style: styles.ratingValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \" \", restaurant.average.toFixed(1)), React.createElement(Text, {\n    style: styles.info,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \" \\u2022 \", restaurant == null ? void 0 : (_restaurant$category = restaurant.category) == null ? void 0 : _restaurant$category.name, \" \\u2022 \", dist.toFixed(1), \" km\")), React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.info), styles.margin),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, restaurant.minDeliveryInterval, \" - \", restaurant.maxDeliveryInterval, \" min \")));\n};\n\nexport default RestaurantComponent;","map":{"version":3,"sources":["C:/Users/robson/Desktop/ifood-react-native/app/src/components/Restaurant/index.tsx"],"names":["React","atoms","useRecoilValue","iFoodIcons","styles","StyleSheet","create","container","width","borderRadius","borderColor","borderWidth","alignItems","justifyContent","flexDirection","marginTop","image","height","resizeMode","margin","description","borderLeftColor","borderLeftWidth","padding","display","name","fontFamily","fontSize","color","row","ratingIcon","ratingValue","info","RestaurantComponent","props","restaurant","address","addressState","dist","getDistanceBetween","uri","imageSrc","star","average","toFixed","category","minDeliveryInterval","maxDeliveryInterval"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { \r\n  StyleSheet, \r\n  Text, \r\n  View,\r\n  Image \r\n} from 'react-native';\r\n\r\nimport * as atoms from '../../geolocator/atom';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { iFoodIcons } from '../../theme/fonts';\r\nimport Restaurant from '../../models/Restaurant/model';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: '100%',\r\n    borderRadius: 4,\r\n    borderColor: 'rgb(232, 232, 232)',\r\n    borderWidth: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    flexDirection: 'row',\r\n    marginTop: 10\r\n  },\r\n\r\n  image: {\r\n    width: 54,\r\n    height: 54,\r\n    resizeMode: 'cover',\r\n    margin: 12\r\n  },\r\n\r\n  description: {\r\n    borderLeftColor: 'rgb(232, 232, 232)',\r\n    borderLeftWidth: 1,\r\n    padding: 12,\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start',\r\n    flexDirection: 'column'\r\n  },\r\n\r\n  name: {\r\n    fontFamily: 'SulSans-Bold',\r\n    fontSize: 15,\r\n    color: 'rgb(62, 62, 62)'\r\n  },\r\n\r\n  row: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    flexDirection: 'row'\r\n  },\r\n  \r\n  ratingIcon: {\r\n    color: '#e7a74e',\r\n    fontSize: 12,\r\n    fontFamily: 'iFood-Icons'\r\n  },\r\n\r\n  ratingValue: {\r\n    color: '#e7a74e',\r\n    fontFamily: 'SulSans-Bold',\r\n    fontSize: 12\r\n  },\r\n  \r\n  info: {\r\n    fontFamily: 'SulSans-Regular',\r\n    fontSize: 13,\r\n    color: 'rgb(113, 113, 113)'\r\n  },\r\n\r\n  margin: {\r\n    marginTop: 10\r\n  }\r\n});\r\n\r\nconst RestaurantComponent = (props: any) => {\r\n  const restaurant = props.restaurant as Restaurant;\r\n  const address = useRecoilValue(atoms.addressState);\r\n  const dist = (address?.getDistanceBetween(restaurant.address) ?? 0) / 1000;\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Image style={styles.image}\r\n             source={{uri: restaurant.imageSrc}}\r\n             resizeMode={'cover'} />\r\n\r\n      <View style={styles.description}>\r\n        <Text style={styles.name}\r\n              numberOfLines={1}>{restaurant.name}</Text>\r\n\r\n        <View style={styles.row}>\r\n          <Text style={styles.ratingIcon}>{iFoodIcons.star}</Text>\r\n          <Text style={styles.ratingValue}> {restaurant.average.toFixed(1)}</Text>\r\n\r\n          <Text style={styles.info}> • {restaurant?.category?.name} • {dist.toFixed(1)} km</Text>\r\n        </View>\r\n\r\n        <Text style={{...styles.info, ...styles.margin}}>{restaurant.minDeliveryInterval} - {restaurant.maxDeliveryInterval} min </Text>\r\n      </View>\r\n    </View>\r\n  ) \r\n  /*return (\r\n    <View style={styles.container}>\r\n      <Image style={styles.logo}\r\n             source={{uri: props.restaurant.imageSrc}} />\r\n      <View style={styles.column}>\r\n        <Text style={styles.name}>{props.restaurant.name}</Text>\r\n        <Text style={styles.description}>{props.restaurant.description}</Text>\r\n      </View>\r\n    </View>\r\n  ); */\r\n}\r\n\r\nexport default RestaurantComponent;"]},"metadata":{},"sourceType":"module"}