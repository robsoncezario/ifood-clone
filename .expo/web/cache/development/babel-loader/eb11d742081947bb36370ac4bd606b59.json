{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport * as Location from 'expo-location';\nimport GoogleApi from \"./settings\";\n\nvar GeolocatorService = function GeolocatorService() {\n  _classCallCheck(this, GeolocatorService);\n};\n\nGeolocatorService.getLocation = function _callee() {\n  var location;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n        case 2:\n          location = _context.sent;\n\n          if (location) {\n            fetch('https://maps.googleapis.com/maps/api/geocode/json?address=' + location.coords.latitude + ',' + location.coords.longitude + '&key=' + GoogleApi.apiKey).then(function (response) {\n              return response.json();\n            }).then(function (responseJson) {\n              console.log('ADDRESS GEOCODE is BACK!! => ' + JSON.stringify(responseJson));\n            });\n          }\n\n          return _context.abrupt(\"return\", 'blank');\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport { GeolocatorService as default };","map":{"version":3,"sources":["C:/Users/robson/Desktop/ifood-react-native/app/src/geolocator/index.ts"],"names":["Location","GoogleApi","GeolocatorService","getLocation","getCurrentPositionAsync","location","fetch","coords","latitude","longitude","apiKey","then","response","json","responseJson","console","log","JSON","stringify"],"mappings":";;AAAA,OAAO,KAAKA,QAAZ,MAA0B,eAA1B;AAGA,OAAOC,SAAP;;IAEqBC,iB;;;;AAAAA,iB,CACZC,W,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACIH,QAAQ,CAACI,uBAAT,CAAiC,EAAjC,CADJ;;AAAA;AACbC,UAAAA,QADa;;AAGnB,cAAGA,QAAH,EAAa;AACXC,YAAAA,KAAK,CAAC,+DAA+DD,QAAQ,CAACE,MAAT,CAAgBC,QAA/E,GAA0F,GAA1F,GAAgGH,QAAQ,CAACE,MAAT,CAAgBE,SAAhH,GAA4H,OAA5H,GAAsIR,SAAS,CAACS,MAAjJ,CAAL,CACGC,IADH,CACQ,UAACC,QAAD;AAAA,qBAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,aADR,EAEGF,IAFH,CAEQ,UAACG,YAAD,EAAkB;AACpBC,cAAAA,OAAO,CAACC,GAAR,CAAY,kCAAkCC,IAAI,CAACC,SAAL,CAAeJ,YAAf,CAA9C;AACL,aAJD;AAKD;;AATkB,2CAWZ,OAXY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C;;SADFZ,iB","sourcesContent":["import * as Location from 'expo-location';\r\nimport Geocoder from 'react-native-geocoding';\r\n\r\nimport GoogleApi from './settings';\r\n\r\nexport default class GeolocatorService {\r\n  static getLocation = async () => {\r\n    const location = await Location.getCurrentPositionAsync({});\r\n\r\n    if(location) {\r\n      fetch('https://maps.googleapis.com/maps/api/geocode/json?address=' + location.coords.latitude + ',' + location.coords.longitude + '&key=' + GoogleApi.apiKey)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            console.log('ADDRESS GEOCODE is BACK!! => ' + JSON.stringify(responseJson));\r\n      })\r\n    }\r\n\r\n    return 'blank';\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}