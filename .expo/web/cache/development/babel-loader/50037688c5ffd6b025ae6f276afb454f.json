{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\robson\\\\Desktop\\\\ifood-react-native\\\\app\\\\src\\\\screens\\\\home\\\\AppBar\\\\index.tsx\";\nimport React, { useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useRecoilState } from 'recoil';\nimport * as atoms from \"../../../geolocator/atom\";\nimport GeolocatorService from \"../../../geolocator\";\nimport { iFoodIcons } from \"../../../theme/fonts\";\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingLeft: 20,\n    paddingRight: 20,\n    paddingTop: Platform.select({\n      web: 20,\n      android: 40,\n      ios: 40\n    }),\n    paddingBottom: 14,\n    display: 'flex',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    flexDirection: 'column',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowColor: '#000000',\n    shadowRadius: 4,\n    shadowOpacity: 0.2,\n    elevation: 0.1,\n    borderBottomWidth: 0\n  },\n  row: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  label: {\n    fontFamily: 'SulSans-Light',\n    fontSize: 14,\n    color: 'rgb(166, 165, 165)',\n    textTransform: 'uppercase'\n  },\n  address: {\n    fontFamily: 'SulSans-Bold',\n    fontSize: 16,\n    color: 'rgb(62, 62, 62)'\n  },\n  downChevron: {\n    fontSize: 16,\n    fontFamily: 'iFood-Icons',\n    color: '#ea1d2c',\n    marginLeft: 10\n  }\n});\n\nvar AppBar = function AppBar() {\n  var _address$formatted, _address$formatted$sp, _address$formatted$sp2;\n\n  var _useRecoilState = useRecoilState(atoms.addressState),\n      _useRecoilState2 = _slicedToArray(_useRecoilState, 2),\n      address = _useRecoilState2[0],\n      setAddress = _useRecoilState2[1];\n\n  useEffect(function () {\n    (function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(GeolocatorService.getLocation().then(function (value) {\n                setAddress(value);\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  var formattedAddress = address == null ? void 0 : (_address$formatted = address.formatted) == null ? void 0 : (_address$formatted$sp = _address$formatted.split(',')) == null ? void 0 : (_address$formatted$sp2 = _address$formatted$sp.slice(0, 2)) == null ? void 0 : _address$formatted$sp2.join(',');\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, \"Entregar em\"), React.createElement(View, {\n    style: styles.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.address,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, formattedAddress != null ? formattedAddress : '...'), React.createElement(Text, {\n    style: styles.downChevron,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, iFoodIcons.downChevron)));\n};\n\nexport default AppBar;","map":{"version":3,"sources":["C:/Users/robson/Desktop/ifood-react-native/app/src/screens/home/AppBar/index.tsx"],"names":["React","useEffect","useRecoilState","atoms","GeolocatorService","iFoodIcons","styles","StyleSheet","create","container","width","paddingLeft","paddingRight","paddingTop","Platform","select","web","android","ios","paddingBottom","display","alignItems","justifyContent","flexDirection","shadowOffset","height","shadowColor","shadowRadius","shadowOpacity","elevation","borderBottomWidth","row","label","fontFamily","fontSize","color","textTransform","address","downChevron","marginLeft","AppBar","addressState","setAddress","getLocation","then","value","formattedAddress","formatted","split","slice","join"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { \r\n  StyleSheet, \r\n  Text, \r\n  View,\r\n  Platform\r\n} from 'react-native';\r\nimport { useRecoilState } from 'recoil';\r\n\r\nimport * as atoms from '../../../geolocator/atom';\r\nimport GeolocatorService from '../../../geolocator';\r\n\r\nimport { iFoodIcons } from '../../../theme/fonts';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: '100%',\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    paddingTop: Platform.select({\r\n      web: 20,\r\n      android: 40,\r\n      ios: 40\r\n    }),\r\n    paddingBottom: 14,\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start',\r\n    flexDirection: 'column',\r\n    shadowOffset: {  \r\n      width: 0,  \r\n      height: 2,  \r\n    },\r\n    shadowColor: '#000000',\r\n    shadowRadius: 4,\r\n    shadowOpacity: 0.2,\r\n    elevation: 0.1,\r\n    borderBottomWidth: 0,\r\n  },\r\n\r\n  row: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'row'\r\n  },\r\n\r\n  label: {\r\n    fontFamily: 'SulSans-Light',\r\n    fontSize: 14,\r\n    color: 'rgb(166, 165, 165)',\r\n    textTransform: 'uppercase'\r\n  },\r\n\r\n  address: {\r\n    fontFamily: 'SulSans-Bold',\r\n    fontSize: 16,\r\n    color: 'rgb(62, 62, 62)'\r\n  },\r\n\r\n  downChevron: {\r\n    fontSize: 16,\r\n    fontFamily: 'iFood-Icons',\r\n    color: '#ea1d2c',\r\n    marginLeft: 10\r\n  }\r\n});\r\n\r\nconst AppBar = () => {\r\n  const [address, setAddress] = useRecoilState(atoms.addressState);\r\n  \r\n  useEffect(() => {\r\n    (async () => {\r\n      await GeolocatorService\r\n        .getLocation()\r\n        .then((value) => {\r\n          setAddress(value);\r\n        });\r\n    })(); \r\n  }, []);\r\n\r\n  const formattedAddress = address\r\n    ?.formatted\r\n    ?.split(',')\r\n    ?.slice(0, 2)\r\n    ?.join(',')\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.label}>Entregar em</Text>\r\n      <View style={styles.row}>\r\n        <Text style={styles.address}>{formattedAddress ?? '...'}</Text>\r\n        <Text style={styles.downChevron}>{iFoodIcons.downChevron}</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default AppBar;"]},"metadata":{},"sourceType":"module"}