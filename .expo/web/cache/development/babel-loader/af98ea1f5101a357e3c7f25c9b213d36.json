{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robson\\\\Desktop\\\\ifood-react-native\\\\app\\\\src\\\\screens\\\\navigation\\\\index.tsx\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Screen } from \"./screen\";\nimport Tab from \"../../components/Tab\";\nimport { iFoodIcons } from \"../../theme/fonts\";\nimport HomeScreen from \"../../screens/home/index\";\nvar styles = StyleSheet.create({\n  container: {\n    position: 'relative',\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    flexDirection: 'row'\n  }\n});\nvar BottomTab = createBottomTabNavigator();\n\nvar BottomNavigationBar = function BottomNavigationBar() {\n  var screenList = [new Screen('Início', iFoodIcons.homeOutlined, iFoodIcons.homeFilled, HomeScreen), new Screen('Busca', iFoodIcons.searchOutlined, iFoodIcons.searchFilled, HomeScreen), new Screen('Pedidos', iFoodIcons.orderOutlined, iFoodIcons.orderFilled, HomeScreen), new Screen('Perfil', iFoodIcons.perfilOutlined, iFoodIcons.perfilFilled, HomeScreen)];\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, React.createElement(BottomTab.Navigator, {\n    tabBar: function tabBar(_ref) {\n      var state = _ref.state,\n          descriptors = _ref.descriptors,\n          navigation = _ref.navigation;\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, screenList.map(function (tab, index) {\n        var isFocused = state.index === index;\n\n        var onPress = function onPress() {\n          var event = navigation.emit({\n            type: 'tabPress',\n            target: tab.label,\n            canPreventDefault: true\n          });\n\n          if (!isFocused && !event.defaultPrevented) {\n            navigation.navigate(tab.label);\n          }\n        };\n\n        var onLongPress = function onLongPress() {\n          navigation.emit({\n            type: 'tabLongPress',\n            target: tab.label\n          });\n        };\n\n        return React.createElement(Tab, {\n          key: tab.label,\n          label: tab.label,\n          color: '#3f3e3e',\n          isFocused: isFocused,\n          icon: tab.icon,\n          focusedIcon: tab.focusedIcon,\n          onPress: onPress,\n          onLongPress: onLongPress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }\n        });\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, screenList.map(function (tab, index) {\n    return React.createElement(BottomTab.Screen, {\n      key: tab.label,\n      name: tab.label,\n      component: tab.component,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    });\n  })));\n};\n\nexport default BottomNavigationBar;","map":{"version":3,"sources":["C:/Users/robson/Desktop/ifood-react-native/app/src/screens/navigation/index.tsx"],"names":["React","NavigationContainer","createBottomTabNavigator","Screen","Tab","iFoodIcons","HomeScreen","styles","StyleSheet","create","container","position","width","display","alignItems","justifyContent","flexDirection","BottomTab","BottomNavigationBar","screenList","homeOutlined","homeFilled","searchOutlined","searchFilled","orderOutlined","orderFilled","perfilOutlined","perfilFilled","state","descriptors","navigation","map","tab","index","isFocused","onPress","event","emit","type","target","label","canPreventDefault","defaultPrevented","navigate","onLongPress","icon","focusedIcon","component"],"mappings":";AAAA,OAAOA,KAAP,MAAkC,OAAlC;;;AAKA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AAEA,SAASC,MAAT;AACA,OAAOC,GAAP;AAGA,SAASC,UAAT;AACA,OAAOC,UAAP;AAGA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,UADD;AAETC,IAAAA,KAAK,EAAE,MAFE;AAGTC,IAAAA,OAAO,EAAE,MAHA;AAITC,IAAAA,UAAU,EAAE,QAJH;AAKTC,IAAAA,cAAc,EAAE,cALP;AAMTC,IAAAA,aAAa,EAAE;AANN;AADoB,CAAlB,CAAf;AAWA,IAAMC,SAAS,GAAGf,wBAAwB,EAA1C;;AAEA,IAAMgB,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChC,MAAMC,UAA0B,GAAG,CACjC,IAAIhB,MAAJ,CACE,QADF,EAEEE,UAAU,CAACe,YAFb,EAGEf,UAAU,CAACgB,UAHb,EAIEf,UAJF,CADiC,EAQjC,IAAIH,MAAJ,CACE,OADF,EAEEE,UAAU,CAACiB,cAFb,EAGEjB,UAAU,CAACkB,YAHb,EAIEjB,UAJF,CARiC,EAejC,IAAIH,MAAJ,CACE,SADF,EAEEE,UAAU,CAACmB,aAFb,EAGEnB,UAAU,CAACoB,WAHb,EAIEnB,UAJF,CAfiC,EAsBjC,IAAIH,MAAJ,CACE,QADF,EAEEE,UAAU,CAACqB,cAFb,EAGErB,UAAU,CAACsB,YAHb,EAIErB,UAJF,CAtBiC,CAAnC;AA8BA,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD,CAAW,SAAX;AAAqB,IAAA,MAAM,EAAE,sBAAwC;AAAA,UAArCsB,KAAqC,QAArCA,KAAqC;AAAA,UAA9BC,WAA8B,QAA9BA,WAA8B;AAAA,UAAjBC,UAAiB,QAAjBA,UAAiB;AACnE,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEvB,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGS,UAAU,CAACY,GAAX,CAAe,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAC9B,YAAMC,SAAS,GAAGN,KAAK,CAACK,KAAN,KAAgBA,KAAlC;;AACA,YAAME,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,cAAMC,KAAK,GAAGN,UAAU,CAACO,IAAX,CAAgB;AAC5BC,YAAAA,IAAI,EAAE,UADsB;AAE5BC,YAAAA,MAAM,EAAEP,GAAG,CAACQ,KAFgB;AAG5BC,YAAAA,iBAAiB,EAAE;AAHS,WAAhB,CAAd;;AAMA,cAAI,CAACP,SAAD,IAAc,CAACE,KAAK,CAACM,gBAAzB,EAA2C;AACzCZ,YAAAA,UAAU,CAACa,QAAX,CAAoBX,GAAG,CAACQ,KAAxB;AACD;AACF,SAVD;;AAYA,YAAMI,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBd,UAAAA,UAAU,CAACO,IAAX,CAAgB;AACdC,YAAAA,IAAI,EAAE,cADQ;AAEdC,YAAAA,MAAM,EAAEP,GAAG,CAACQ;AAFE,WAAhB;AAID,SALD;;AAOA,eACE,oBAAC,GAAD;AACE,UAAA,GAAG,EAAER,GAAG,CAACQ,KADX;AAEE,UAAA,KAAK,EAAER,GAAG,CAACQ,KAFb;AAGE,UAAA,KAAK,EAAE,SAHT;AAIE,UAAA,SAAS,EAAEN,SAJb;AAKE,UAAA,IAAI,EAAEF,GAAG,CAACa,IALZ;AAME,UAAA,WAAW,EAAEb,GAAG,CAACc,WANnB;AAOE,UAAA,OAAO,EAAEX,OAPX;AAQE,UAAA,WAAW,EAAES,WARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUE,OA/BH,CADH,CADF;AAoCE,KArCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAuCCzB,UAAU,CAACY,GAAX,CAAe,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAC9B,WACE,oBAAC,SAAD,CAAW,MAAX;AACE,MAAA,GAAG,EAAED,GAAG,CAACQ,KADX;AAEE,MAAA,IAAI,EAAER,GAAG,CAACQ,KAFZ;AAGE,MAAA,SAAS,EAAER,GAAG,CAACe,SAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAKE,GANH,CAvCD,CADF,CADF;AAmDD,CAlFD;;AAoFA,eAAe7B,mBAAf","sourcesContent":["import React, { useContext } from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, SafeAreaView } from 'react-native';\r\n\r\n\r\n\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n\r\nimport { Screen } from './screen';\r\nimport Tab from '../../components/Tab';\r\n\r\n\r\nimport { iFoodIcons } from '../../theme/fonts';\r\nimport HomeScreen  from '../../screens/home/index';\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-around',\r\n    flexDirection: 'row'\r\n  }\r\n});\r\n\r\nconst BottomTab = createBottomTabNavigator();\r\n\r\nconst BottomNavigationBar = () => {\r\n  const screenList : Array<Screen> = [\r\n    new Screen(\r\n      'Início',\r\n      iFoodIcons.homeOutlined,\r\n      iFoodIcons.homeFilled,\r\n      HomeScreen\r\n    ),\r\n\r\n    new Screen(\r\n      'Busca',\r\n      iFoodIcons.searchOutlined,\r\n      iFoodIcons.searchFilled,\r\n      HomeScreen\r\n    ),\r\n\r\n    new Screen(\r\n      'Pedidos',\r\n      iFoodIcons.orderOutlined,\r\n      iFoodIcons.orderFilled,\r\n      HomeScreen\r\n    ),\r\n\r\n    new Screen(\r\n      'Perfil',\r\n      iFoodIcons.perfilOutlined,\r\n      iFoodIcons.perfilFilled,\r\n      HomeScreen\r\n    ),\r\n  ];\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <BottomTab.Navigator tabBar={({ state, descriptors, navigation }) => {\r\n        return (\r\n          <View style={styles.container}>\r\n            {screenList.map((tab, index) => {\r\n              const isFocused = state.index === index;\r\n              const onPress = () => {\r\n                const event = navigation.emit({\r\n                  type: 'tabPress',\r\n                  target: tab.label,\r\n                  canPreventDefault: true,\r\n                });\r\n      \r\n                if (!isFocused && !event.defaultPrevented) {\r\n                  navigation.navigate(tab.label);\r\n                }\r\n              };\r\n      \r\n              const onLongPress = () => {\r\n                navigation.emit({\r\n                  type: 'tabLongPress',\r\n                  target: tab.label,\r\n                });\r\n              };\r\n\r\n              return (\r\n                <Tab\r\n                  key={tab.label}\r\n                  label={tab.label}\r\n                  color={'#3f3e3e'}\r\n                  isFocused={isFocused}\r\n                  icon={tab.icon}\r\n                  focusedIcon={tab.focusedIcon}\r\n                  onPress={onPress}\r\n                  onLongPress={onLongPress} />\r\n              )})\r\n            }\r\n          </View>\r\n        )}} >\r\n\r\n      {screenList.map((tab, index) => {\r\n        return (\r\n          <BottomTab.Screen\r\n            key={tab.label}\r\n            name={tab.label} \r\n            component={tab.component} />\r\n        )})}\r\n      </BottomTab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default BottomNavigationBar;\r\n"]},"metadata":{},"sourceType":"module"}