{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\robson\\\\Desktop\\\\ifood-react-native\\\\app\\\\src\\\\screens\\\\home\\\\AppBar\\\\index.tsx\";\nimport React, { useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { useRecoilState } from 'recoil';\nimport * as atoms from \"../../../geolocator/atom\";\nimport GeolocatorService from \"../../../geolocator\";\nvar styles = StyleSheet.create({\n  container: {\n    paddingLeft: 20,\n    paddingRight: 20,\n    paddingTop: 20,\n    paddingBottom: 14,\n    display: 'flex',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    flexDirection: 'column'\n  },\n  label: {\n    fontFamily: 'SulSans-Regular',\n    fontSize: 14,\n    color: 'rgb(166, 165, 165)',\n    textTransform: 'uppercase'\n  },\n  address: {\n    fontFamily: 'SulSans-Bold',\n    fontSize: 16,\n    color: 'rgb(62, 62, 62)'\n  }\n});\n\nvar AppBar = function AppBar() {\n  var _address$formatted;\n\n  var _useRecoilState = useRecoilState(atoms.addressState),\n      _useRecoilState2 = _slicedToArray(_useRecoilState, 2),\n      address = _useRecoilState2[0],\n      setAddress = _useRecoilState2[1];\n\n  useEffect(function () {\n    (function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(GeolocatorService.getLocation().then(function (value) {\n                setAddress(value);\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Entregar em\"), React.createElement(Text, {\n    style: styles.address,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, (_address$formatted = address == null ? void 0 : address.formatted) != null ? _address$formatted : '...'));\n};\n\nexport default AppBar;","map":{"version":3,"sources":["C:/Users/robson/Desktop/ifood-react-native/app/src/screens/home/AppBar/index.tsx"],"names":["React","useEffect","useRecoilState","atoms","GeolocatorService","styles","StyleSheet","create","container","paddingLeft","paddingRight","paddingTop","paddingBottom","display","alignItems","justifyContent","flexDirection","label","fontFamily","fontSize","color","textTransform","address","AppBar","addressState","setAddress","getLocation","then","value","formatted"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAMA,SAASC,cAAT,QAA+B,QAA/B;AAEA,OAAO,KAAKC,KAAZ;AACA,OAAOC,iBAAP;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,WAAW,EAAE,EADJ;AAETC,IAAAA,YAAY,EAAE,EAFL;AAGTC,IAAAA,UAAU,EAAE,EAHH;AAITC,IAAAA,aAAa,EAAE,EAJN;AAMTC,IAAAA,OAAO,EAAE,MANA;AAOTC,IAAAA,UAAU,EAAE,YAPH;AAQTC,IAAAA,cAAc,EAAE,YARP;AASTC,IAAAA,aAAa,EAAE;AATN,GADoB;AAa/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAE,iBADP;AAELC,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,KAAK,EAAE,oBAHF;AAILC,IAAAA,aAAa,EAAE;AAJV,GAbwB;AAoB/BC,EAAAA,OAAO,EAAE;AACPJ,IAAAA,UAAU,EAAE,cADL;AAEPC,IAAAA,QAAQ,EAAE,EAFH;AAGPC,IAAAA,KAAK,EAAE;AAHA;AApBsB,CAAlB,CAAf;;AA2BA,IAAMG,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AAAA,wBACWrB,cAAc,CAACC,KAAK,CAACqB,YAAP,CADzB;AAAA;AAAA,MACZF,OADY;AAAA,MACHG,UADG;;AAGnBxB,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACOG,iBAAiB,CACpBsB,WADG,GAEHC,IAFG,CAEE,UAACC,KAAD,EAAW;AACfH,gBAAAA,UAAU,CAACG,KAAD,CAAV;AACD,eAJG,CADP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEvB,MAAM,CAACG,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACY,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACiB,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA8BA,OAA9B,oBAA8BA,OAAO,CAAEO,SAAvC,iCAAoD,KAApD,CAFF,CADF;AAMD,CAnBD;;AAqBA,eAAeN,MAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { \r\n  StyleSheet, \r\n  Text, \r\n  View, \r\n  SafeAreaView } from 'react-native';\r\nimport { useRecoilState } from 'recoil';\r\n\r\nimport * as atoms from '../../../geolocator/atom';\r\nimport GeolocatorService from '../../../geolocator';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    paddingTop: 20,\r\n    paddingBottom: 14,\r\n\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start',\r\n    flexDirection: 'column'\r\n  },\r\n\r\n  label: {\r\n    fontFamily: 'SulSans-Regular',\r\n    fontSize: 14,\r\n    color: 'rgb(166, 165, 165)',\r\n    textTransform: 'uppercase'\r\n  },\r\n\r\n  address: {\r\n    fontFamily: 'SulSans-Bold',\r\n    fontSize: 16,\r\n    color: 'rgb(62, 62, 62)'\r\n  }\r\n});\r\n\r\nconst AppBar = () => {\r\n  const [address, setAddress] = useRecoilState(atoms.addressState);\r\n  \r\n  useEffect(() => {\r\n    (async () => {\r\n      await GeolocatorService\r\n        .getLocation()\r\n        .then((value) => {\r\n          setAddress(value);\r\n        });\r\n    })(); \r\n  }, []);\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <Text style={styles.label}>Entregar em</Text>\r\n      <Text style={styles.address}>{address?.formatted ?? '...'}</Text>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nexport default AppBar;"]},"metadata":{},"sourceType":"module"}